name: Deploy to Dev

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dbt
        run: pip install dbt-snowflake
      
      - name: Setup Liquibase
        uses: liquibase/setup-liquibase@v1
        with:
          version: '4.32.0'
          edition: 'oss'
      
      - name: Deploy Database Changes
        run: |
          liquibase flow \
            --flow-file=liquibase/flowfiles/deploy.flowfile.yaml \
            --defaults-file=liquibase/properties/liquibase.dev.properties
        env:
          LIQUIBASE_LICENSE_KEY: ${{ secrets.LIQUIBASE_LICENSE_KEY }}
          LIQUIBASE_COMMAND_URL: jdbc:snowflake://${{ secrets.SNOWFLAKE_ACCOUNT }}.snowflakecomputing.com/?db=ONLINE_STORE_DEV&schema=PUBLIC&warehouse=COMPUTE_WH
          LIQUIBASE_COMMAND_USERNAME: LIQUIBASE_USER
          LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_DEV_PASSWORD }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_DATABASE: ONLINE_STORE_DEV
          DBT_PASSWORD: ${{ secrets.DBT_DEV_PASSWORD }}
          ENVIRONMENT: dev
      
      - name: Upload Liquibase Deployment Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: liquibase-deployment-report-${{ github.sha }}
          path: deploy-dev.html
          retention-days: 30
      
      - name: Add Deployment Report to Summary
        if: always()
        run: |
          if [ -f "deploy-dev.html" ]; then
            echo "## 📊 Liquibase Deployment Report" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Liquibase deployment report generated successfully**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📄 **Artifact Name:** \`liquibase-deployment-report-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**📥 How to Download the Report:**" >> $GITHUB_STEP_SUMMARY
            echo "1. Scroll down to the **Artifacts** section at the bottom of this page" >> $GITHUB_STEP_SUMMARY
            echo "2. Click on \`liquibase-deployment-report-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY  
            echo "3. Open the downloaded HTML file in your browser" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**📋 The HTML report contains:**" >> $GITHUB_STEP_SUMMARY
            echo "- Applied changesets and their details" >> $GITHUB_STEP_SUMMARY
            echo "- Database objects created/modified" >> $GITHUB_STEP_SUMMARY
            echo "- Execution summary and statistics" >> $GITHUB_STEP_SUMMARY
            echo "- Deployment timeline and performance metrics" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Liquibase deployment report not found**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The deployment may have completed without generating a report." >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Create Changelog Artifact
        run: |
          mkdir -p artifacts
          zip -r artifacts/changelog-${{ github.sha }}.zip \
            liquibase/changelogs \
            liquibase/properties \
            liquibase/flowfiles \
            dbt/
      
      - name: Upload Changelog Artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelog-${{ github.sha }}
          path: artifacts/changelog-${{ github.sha }}.zip
          retention-days: 90