name: Reclone Dev Database

on:
  workflow_dispatch:

jobs:
  reclone-dev:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Snowflake CLI
        uses: snowflakedb/snowflake-cli-action@v1.5
      
      - name: Reset Development Database
        run: |
          echo "üîÑ Resetting development database..."
          echo "üìä Connecting to Snowflake account: ${{ secrets.SNOWFLAKE_ACCOUNT }}"
          
          # Create SQL for database reset
          cat << 'EOF' > reset_dev.sql
          -- Drop the existing dev database (if it exists)
          -- Note: DATABASE_ADMIN_ROLE must own this database
          DROP DATABASE IF EXISTS ONLINE_STORE_DEV;
          
          -- Create fresh dev database from ONLINE_STORE_DB (the master)
          -- DATABASE_ADMIN_ROLE will automatically own this new database
          CREATE DATABASE ONLINE_STORE_DEV 
              CLONE ONLINE_STORE_DB
              COMMENT = 'Development database - freshly cloned from master via GitHub Actions';
          
          -- Grant permissions to both roles on the new dev database
          GRANT USAGE ON DATABASE ONLINE_STORE_DEV TO ROLE LIQUIBASE_ROLE;
          GRANT USAGE ON DATABASE ONLINE_STORE_DEV TO ROLE DBT_ROLE;
          
          -- Transfer schema ownership to enable full privileges
          GRANT OWNERSHIP ON SCHEMA ONLINE_STORE_DEV.PUBLIC TO ROLE LIQUIBASE_ROLE COPY CURRENT GRANTS;
          GRANT OWNERSHIP ON SCHEMA ONLINE_STORE_DEV.DBT TO ROLE DBT_ROLE COPY CURRENT GRANTS;
          
          -- Grant cross-schema access
          GRANT USAGE ON SCHEMA ONLINE_STORE_DEV.PUBLIC TO ROLE DBT_ROLE;
          GRANT SELECT ON ALL TABLES IN SCHEMA ONLINE_STORE_DEV.PUBLIC TO ROLE DBT_ROLE;
          GRANT SELECT ON ALL VIEWS IN SCHEMA ONLINE_STORE_DEV.PUBLIC TO ROLE DBT_ROLE;
          
          GRANT USAGE ON SCHEMA ONLINE_STORE_DEV.DBT TO ROLE LIQUIBASE_ROLE;
          GRANT SELECT ON ALL TABLES IN SCHEMA ONLINE_STORE_DEV.DBT TO ROLE LIQUIBASE_ROLE;
          GRANT SELECT ON ALL VIEWS IN SCHEMA ONLINE_STORE_DEV.DBT TO ROLE LIQUIBASE_ROLE;
          
          -- Note: Future grants are not needed here because:
          -- 1. LIQUIBASE_ROLE owns PUBLIC schema (gets ALL privileges automatically)  
          -- 2. DBT_ROLE owns DBT schema (gets ALL privileges automatically)
          -- 3. Cross-schema SELECT access is already granted above
          -- Schema owners will set their own future grants as needed
          
          -- Show result
          SELECT 'Database reset completed successfully' AS status;
          SHOW DATABASES LIKE '%ONLINE_STORE%';
          EOF
          
          echo "üóëÔ∏è Dropping existing ONLINE_STORE_DEV..."
          echo "üìã Cloning fresh copy from ONLINE_STORE_DB (master)..."
          
          # Execute the reset SQL using temporary connection with database admin privileges
          snow sql -f reset_dev.sql --temporary-connection \
            --account "${{ secrets.SNOWFLAKE_ACCOUNT }}" \
            --user DATABASE_ADMIN_USER \
            --password "${{ secrets.DATABASE_ADMIN_PASSWORD }}" \
            --role DATABASE_ADMIN_ROLE \
            --warehouse COMPUTE_WH
          
          echo ""
          echo "‚úÖ Development database reset complete!"
          echo "üìä ONLINE_STORE_DEV is now a fresh clone of ONLINE_STORE_DB"
          echo ""
          echo "üí° The dev deployment workflow will automatically rebuild dbt models on the next push to main"